// Code generated by protoc-gen-go.
// source: github.com/micro/hailo-srv/proto/api/api.proto
// DO NOT EDIT!

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/hailo-srv/proto/api/api.proto

It has these top-level messages:
	StatusRequest
	StatusResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type StatusRequest struct {
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StatusResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*StatusRequest)(nil), "StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "StatusResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Api service

type ApiClient interface {
	Status(ctx context.Context, in *StatusRequest, opts ...client.CallOption) (*StatusResponse, error)
}

type apiClient struct {
	c           client.Client
	serviceName string
}

func NewApiClient(serviceName string, c client.Client) ApiClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "api"
	}
	return &apiClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *apiClient) Status(ctx context.Context, in *StatusRequest, opts ...client.CallOption) (*StatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Api.Status", in)
	out := new(StatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Api service

type ApiHandler interface {
	Status(context.Context, *StatusRequest, *StatusResponse) error
}

func RegisterApiHandler(s server.Server, hdlr ApiHandler) {
	s.Handle(s.NewHandler(&Api{hdlr}))
}

type Api struct {
	ApiHandler
}

func (h *Api) Status(ctx context.Context, in *StatusRequest, out *StatusResponse) error {
	return h.ApiHandler.Status(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xd2, 0x4b, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0xcd, 0x4c, 0x2e, 0xca, 0xd7, 0xcf, 0x48, 0xcc,
	0xcc, 0xc9, 0xd7, 0x2d, 0x2e, 0x2a, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x4f, 0x2c, 0xc8,
	0x04, 0x61, 0x3d, 0x30, 0x4f, 0x89, 0x9f, 0x8b, 0x37, 0xb8, 0x24, 0xb1, 0xa4, 0xb4, 0x38, 0x28,
	0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x49, 0x81, 0x8b, 0x0f, 0x26, 0x50, 0x5c, 0x90, 0x9f, 0x57,
	0x9c, 0x2a, 0xc4, 0xc7, 0xc5, 0x56, 0x0c, 0x16, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x34, 0x32,
	0xe2, 0x62, 0x76, 0x2c, 0xc8, 0x14, 0xd2, 0xe6, 0x62, 0x83, 0x28, 0x14, 0xe2, 0xd3, 0x43, 0x31,
	0x42, 0x8a, 0x5f, 0x0f, 0xd5, 0x04, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x6d, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xa8, 0xcd, 0x16, 0x60, 0x9f, 0x00, 0x00, 0x00,
}
