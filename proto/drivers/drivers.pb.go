// Code generated by protoc-gen-go.
// source: github.com/micro/hailo-srv/proto/drivers/drivers.proto
// DO NOT EDIT!

/*
Package drivers is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/hailo-srv/proto/drivers/drivers.proto

It has these top-level messages:
	Eta
	Driver
	EtaRequest
	EtaResponse
	NearRequest
	NearResponse
*/
package drivers

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Eta struct {
	Eta         uint64 `protobuf:"varint,1,opt,name=eta" json:"eta,omitempty"`
	Count       uint64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	ServiceType string `protobuf:"bytes,3,opt,name=service_type" json:"service_type,omitempty"`
}

func (m *Eta) Reset()                    { *m = Eta{} }
func (m *Eta) String() string            { return proto.CompactTextString(m) }
func (*Eta) ProtoMessage()               {}
func (*Eta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Driver struct {
	Latitude    float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude   float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	ServiceType string  `protobuf:"bytes,3,opt,name=service_type" json:"service_type,omitempty"`
}

func (m *Driver) Reset()                    { *m = Driver{} }
func (m *Driver) String() string            { return proto.CompactTextString(m) }
func (*Driver) ProtoMessage()               {}
func (*Driver) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type EtaRequest struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *EtaRequest) Reset()                    { *m = EtaRequest{} }
func (m *EtaRequest) String() string            { return proto.CompactTextString(m) }
func (*EtaRequest) ProtoMessage()               {}
func (*EtaRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type EtaResponse struct {
	Etas []*Eta `protobuf:"bytes,1,rep,name=etas" json:"etas,omitempty"`
}

func (m *EtaResponse) Reset()                    { *m = EtaResponse{} }
func (m *EtaResponse) String() string            { return proto.CompactTextString(m) }
func (*EtaResponse) ProtoMessage()               {}
func (*EtaResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EtaResponse) GetEtas() []*Eta {
	if m != nil {
		return m.Etas
	}
	return nil
}

type NearRequest struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *NearRequest) Reset()                    { *m = NearRequest{} }
func (m *NearRequest) String() string            { return proto.CompactTextString(m) }
func (*NearRequest) ProtoMessage()               {}
func (*NearRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type NearResponse struct {
	Drivers []*Driver `protobuf:"bytes,1,rep,name=drivers" json:"drivers,omitempty"`
}

func (m *NearResponse) Reset()                    { *m = NearResponse{} }
func (m *NearResponse) String() string            { return proto.CompactTextString(m) }
func (*NearResponse) ProtoMessage()               {}
func (*NearResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *NearResponse) GetDrivers() []*Driver {
	if m != nil {
		return m.Drivers
	}
	return nil
}

func init() {
	proto.RegisterType((*Eta)(nil), "Eta")
	proto.RegisterType((*Driver)(nil), "Driver")
	proto.RegisterType((*EtaRequest)(nil), "EtaRequest")
	proto.RegisterType((*EtaResponse)(nil), "EtaResponse")
	proto.RegisterType((*NearRequest)(nil), "NearRequest")
	proto.RegisterType((*NearResponse)(nil), "NearResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Drivers service

type DriversClient interface {
	Eta(ctx context.Context, in *EtaRequest, opts ...client.CallOption) (*EtaResponse, error)
	Near(ctx context.Context, in *NearRequest, opts ...client.CallOption) (*NearResponse, error)
}

type driversClient struct {
	c           client.Client
	serviceName string
}

func NewDriversClient(serviceName string, c client.Client) DriversClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "drivers"
	}
	return &driversClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *driversClient) Eta(ctx context.Context, in *EtaRequest, opts ...client.CallOption) (*EtaResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Drivers.Eta", in)
	out := new(EtaResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *driversClient) Near(ctx context.Context, in *NearRequest, opts ...client.CallOption) (*NearResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Drivers.Near", in)
	out := new(NearResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Drivers service

type DriversHandler interface {
	Eta(context.Context, *EtaRequest, *EtaResponse) error
	Near(context.Context, *NearRequest, *NearResponse) error
}

func RegisterDriversHandler(s server.Server, hdlr DriversHandler) {
	s.Handle(s.NewHandler(&Drivers{hdlr}))
}

type Drivers struct {
	DriversHandler
}

func (h *Drivers) Eta(ctx context.Context, in *EtaRequest, out *EtaResponse) error {
	return h.DriversHandler.Eta(ctx, in, out)
}

func (h *Drivers) Near(ctx context.Context, in *NearRequest, out *NearResponse) error {
	return h.DriversHandler.Near(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x9b, 0x26, 0x34, 0xf4, 0x92, 0x4a, 0x60, 0x31, 0x44, 0x9d, 0xc0, 0x12, 0x52, 0x16,
	0x1c, 0x11, 0x24, 0xf8, 0x01, 0xc0, 0xca, 0x80, 0xd8, 0x91, 0x9b, 0x9e, 0x5a, 0x4b, 0x69, 0x1c,
	0xec, 0x4b, 0x24, 0xfe, 0x3d, 0xc6, 0x09, 0x22, 0x03, 0x03, 0x9d, 0x6c, 0x3f, 0xfb, 0xbe, 0x7b,
	0xf7, 0x0c, 0xf7, 0x3b, 0x45, 0xfb, 0x6e, 0x23, 0x2a, 0x7d, 0x28, 0x0e, 0xaa, 0x32, 0xba, 0xd8,
	0x4b, 0x55, 0xeb, 0x1b, 0x6b, 0xfa, 0xa2, 0x35, 0x9a, 0x74, 0xb1, 0x35, 0xaa, 0x47, 0x63, 0x7f,
	0x56, 0xe1, 0x55, 0xfe, 0x00, 0xe1, 0x33, 0x49, 0x96, 0x40, 0x88, 0x24, 0xb3, 0xe0, 0x32, 0xc8,
	0x23, 0xb6, 0x82, 0x93, 0x4a, 0x77, 0x0d, 0x65, 0x73, 0x7f, 0xbc, 0x80, 0xd4, 0xa2, 0xe9, 0x55,
	0x85, 0xef, 0xf4, 0xd9, 0x62, 0x16, 0x3a, 0x75, 0xc9, 0x1f, 0x61, 0xf1, 0xe4, 0x49, 0xec, 0x0c,
	0x4e, 0x6b, 0x49, 0x8a, 0xba, 0x2d, 0x7a, 0x40, 0xc0, 0xce, 0x61, 0x59, 0xeb, 0x66, 0x37, 0x48,
	0x73, 0x2f, 0xfd, 0x0d, 0xb9, 0x05, 0x70, 0xdd, 0x5f, 0xf1, 0xa3, 0x43, 0x4b, 0xff, 0x02, 0xf1,
	0x2b, 0x48, 0x7c, 0x89, 0x6d, 0x75, 0x63, 0x91, 0x31, 0x88, 0x9c, 0x71, 0xeb, 0xde, 0x87, 0x79,
	0x52, 0x46, 0xc2, 0xdd, 0xf1, 0x12, 0x92, 0x17, 0x94, 0xe6, 0x28, 0x6c, 0x0e, 0xe9, 0x50, 0x33,
	0x72, 0x33, 0x88, 0xc7, 0xa0, 0x46, 0x74, 0x2c, 0x86, 0x71, 0xcb, 0x37, 0x88, 0x87, 0x9d, 0x65,
	0x7c, 0x0c, 0x4f, 0xfc, 0x0e, 0xb1, 0x4e, 0xc5, 0xc4, 0x1e, 0x9f, 0xb1, 0x6b, 0x88, 0xbe, 0xc1,
	0x2c, 0x15, 0x13, 0x4f, 0xeb, 0x95, 0x98, 0x76, 0xe3, 0xb3, 0xcd, 0xc2, 0x7f, 0xc7, 0xdd, 0x57,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x45, 0x74, 0x86, 0xc8, 0x01, 0x00, 0x00,
}
