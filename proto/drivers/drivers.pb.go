// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/micro/hailo-srv/proto/drivers/drivers.proto

/*
Package drivers is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/hailo-srv/proto/drivers/drivers.proto

It has these top-level messages:
	Eta
	Driver
	EtaRequest
	EtaResponse
	NearRequest
	NearResponse
*/
package drivers

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Eta struct {
	Eta         uint64 `protobuf:"varint,1,opt,name=eta" json:"eta,omitempty"`
	Count       uint64 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	ServiceType string `protobuf:"bytes,3,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
}

func (m *Eta) Reset()                    { *m = Eta{} }
func (m *Eta) String() string            { return proto.CompactTextString(m) }
func (*Eta) ProtoMessage()               {}
func (*Eta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Eta) GetEta() uint64 {
	if m != nil {
		return m.Eta
	}
	return 0
}

func (m *Eta) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *Eta) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

type Driver struct {
	Latitude    float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude   float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
	ServiceType string  `protobuf:"bytes,3,opt,name=service_type,json=serviceType" json:"service_type,omitempty"`
}

func (m *Driver) Reset()                    { *m = Driver{} }
func (m *Driver) String() string            { return proto.CompactTextString(m) }
func (*Driver) ProtoMessage()               {}
func (*Driver) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Driver) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Driver) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Driver) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

type EtaRequest struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *EtaRequest) Reset()                    { *m = EtaRequest{} }
func (m *EtaRequest) String() string            { return proto.CompactTextString(m) }
func (*EtaRequest) ProtoMessage()               {}
func (*EtaRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EtaRequest) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *EtaRequest) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type EtaResponse struct {
	Etas []*Eta `protobuf:"bytes,1,rep,name=etas" json:"etas,omitempty"`
}

func (m *EtaResponse) Reset()                    { *m = EtaResponse{} }
func (m *EtaResponse) String() string            { return proto.CompactTextString(m) }
func (*EtaResponse) ProtoMessage()               {}
func (*EtaResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *EtaResponse) GetEtas() []*Eta {
	if m != nil {
		return m.Etas
	}
	return nil
}

type NearRequest struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *NearRequest) Reset()                    { *m = NearRequest{} }
func (m *NearRequest) String() string            { return proto.CompactTextString(m) }
func (*NearRequest) ProtoMessage()               {}
func (*NearRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *NearRequest) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *NearRequest) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type NearResponse struct {
	Drivers []*Driver `protobuf:"bytes,1,rep,name=drivers" json:"drivers,omitempty"`
}

func (m *NearResponse) Reset()                    { *m = NearResponse{} }
func (m *NearResponse) String() string            { return proto.CompactTextString(m) }
func (*NearResponse) ProtoMessage()               {}
func (*NearResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *NearResponse) GetDrivers() []*Driver {
	if m != nil {
		return m.Drivers
	}
	return nil
}

func init() {
	proto.RegisterType((*Eta)(nil), "Eta")
	proto.RegisterType((*Driver)(nil), "Driver")
	proto.RegisterType((*EtaRequest)(nil), "EtaRequest")
	proto.RegisterType((*EtaResponse)(nil), "EtaResponse")
	proto.RegisterType((*NearRequest)(nil), "NearRequest")
	proto.RegisterType((*NearResponse)(nil), "NearResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Drivers service

type DriversClient interface {
	Eta(ctx context.Context, in *EtaRequest, opts ...grpc.CallOption) (*EtaResponse, error)
	Near(ctx context.Context, in *NearRequest, opts ...grpc.CallOption) (*NearResponse, error)
}

type driversClient struct {
	cc *grpc.ClientConn
}

func NewDriversClient(cc *grpc.ClientConn) DriversClient {
	return &driversClient{cc}
}

func (c *driversClient) Eta(ctx context.Context, in *EtaRequest, opts ...grpc.CallOption) (*EtaResponse, error) {
	out := new(EtaResponse)
	err := grpc.Invoke(ctx, "/Drivers/Eta", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *driversClient) Near(ctx context.Context, in *NearRequest, opts ...grpc.CallOption) (*NearResponse, error) {
	out := new(NearResponse)
	err := grpc.Invoke(ctx, "/Drivers/Near", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Drivers service

type DriversServer interface {
	Eta(context.Context, *EtaRequest) (*EtaResponse, error)
	Near(context.Context, *NearRequest) (*NearResponse, error)
}

func RegisterDriversServer(s *grpc.Server, srv DriversServer) {
	s.RegisterService(&_Drivers_serviceDesc, srv)
}

func _Drivers_Eta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EtaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DriversServer).Eta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Drivers/Eta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DriversServer).Eta(ctx, req.(*EtaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Drivers_Near_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NearRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DriversServer).Near(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Drivers/Near",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DriversServer).Near(ctx, req.(*NearRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Drivers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Drivers",
	HandlerType: (*DriversServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Eta",
			Handler:    _Drivers_Eta_Handler,
		},
		{
			MethodName: "Near",
			Handler:    _Drivers_Near_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/micro/hailo-srv/proto/drivers/drivers.proto",
}

func init() {
	proto.RegisterFile("github.com/micro/hailo-srv/proto/drivers/drivers.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0xd7, 0xb5, 0x6e, 0xee, 0xb5, 0x82, 0x04, 0x0f, 0x65, 0x78, 0xe8, 0x02, 0x62, 0x2f,
	0xa6, 0x38, 0xc1, 0x4f, 0xe0, 0xf4, 0x26, 0x52, 0x76, 0x97, 0xac, 0x7b, 0x6c, 0x81, 0xae, 0xa9,
	0x49, 0x5a, 0xd8, 0xb7, 0x97, 0x26, 0x9d, 0xeb, 0x51, 0xf4, 0xd4, 0xbe, 0xdf, 0x83, 0xff, 0x2f,
	0x2f, 0x2f, 0xf0, 0xbc, 0x13, 0x66, 0xdf, 0x6c, 0x58, 0x21, 0x0f, 0xd9, 0x41, 0x14, 0x4a, 0x66,
	0x7b, 0x2e, 0x4a, 0xf9, 0xa0, 0x55, 0x9b, 0xd5, 0x4a, 0x1a, 0x99, 0x6d, 0x95, 0x68, 0x51, 0xe9,
	0xd3, 0x97, 0x59, 0x4a, 0x3f, 0xc0, 0x5f, 0x19, 0x4e, 0xae, 0xc1, 0x47, 0xc3, 0x63, 0x2f, 0xf1,
	0xd2, 0x20, 0xef, 0x7e, 0xc9, 0x0d, 0x5c, 0x14, 0xb2, 0xa9, 0x4c, 0x3c, 0xb6, 0xcc, 0x15, 0x64,
	0x01, 0x91, 0x46, 0xd5, 0x8a, 0x02, 0x3f, 0xcd, 0xb1, 0xc6, 0xd8, 0x4f, 0xbc, 0x74, 0x96, 0x87,
	0x3d, 0x5b, 0x1f, 0x6b, 0xa4, 0x08, 0x93, 0x17, 0xab, 0x20, 0x73, 0xb8, 0x2c, 0xb9, 0x11, 0xa6,
	0xd9, 0xa2, 0x4d, 0xf6, 0xf2, 0x9f, 0x9a, 0xdc, 0xc2, 0xac, 0x94, 0xd5, 0xce, 0x35, 0xc7, 0xb6,
	0x79, 0x06, 0xbf, 0xd1, 0xbc, 0x02, 0xac, 0x0c, 0xcf, 0xf1, 0xab, 0x41, 0x6d, 0xfe, 0xae, 0xa2,
	0xf7, 0x10, 0xda, 0x1c, 0x5d, 0xcb, 0x4a, 0x23, 0x89, 0x21, 0x40, 0xc3, 0x75, 0xec, 0x25, 0x7e,
	0x1a, 0x2e, 0x03, 0xd6, 0xf5, 0x2c, 0xa1, 0x6f, 0x10, 0xbe, 0x23, 0x57, 0xff, 0x37, 0x3e, 0x42,
	0xe4, 0x82, 0x7a, 0xe5, 0x02, 0xa6, 0xfd, 0x4e, 0x7a, 0xeb, 0x94, 0xb9, 0x0b, 0xcc, 0x4f, 0x7c,
	0xb9, 0x86, 0xa9, 0x43, 0x9a, 0x50, 0xb7, 0xb0, 0x90, 0x9d, 0xa7, 0x9f, 0x47, 0x6c, 0x30, 0x02,
	0x1d, 0x91, 0x3b, 0x08, 0x3a, 0x03, 0x89, 0xd8, 0xe0, 0xc4, 0xf3, 0x2b, 0x36, 0xd4, 0xd2, 0xd1,
	0x66, 0x62, 0x9f, 0xc0, 0xd3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xee, 0x04, 0xe6, 0x37, 0x3c,
	0x02, 0x00, 0x00,
}
